@*@model SimkaDosenPenelitian*@
@using  Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{ ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_LayoutDosen.cshtml"; }

<head>
    @*<title>Profil @HttpContextAccessor.HttpContext.Session.GetString("Nama") - SIMKA UAJY</title>*@

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />

</head>

<body>
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">

        <section class="content">
            <div class="container-fluid">
                <h1>TestingLoadDosen</h1>
                <div class="card">
                    <div class="card-header p">
                        <ul class="nav nav-pills">

                            <li class="nav-item"><a class="nav-link" href="#pengajaran" data-toggle="tab">Pengajaran</a></li>

                            <li class="nav-item"><a class="nav-link" href="#penelitian" data-toggle="tab">Penelitian</a></li>
                            <li class="nav-item"><a class="nav-link" href="#publikasi" data-toggle="tab">Publikasi</a></li>
                            <li class="nav-item"><a class="nav-link" href="#pengabdian" data-toggle="tab">Pengabdian</a></li>
                            <li class="nav-item"><a class="nav-link" href="#perbandinganpengajaran" data-toggle="tab">Perbandingan Pengajaran SPKP</a></li>
                            <li class="nav-item"><a class="nav-link" href="#referensi" data-toggle="tab">Referensi Sister</a></li>
                            <li class="nav-item"><a class="nav-link" href="#enkripsiPassword" data-toggle="tab">Enkripsi Password</a></li>
                            <li class="nav-item"><a class="nav-link" href="#testEmail" data-toggle="tab">Test Email</a></li>



                        </ul>
                    </div><!-- /.card-header -->
                    <div class="card-body">
                        <div class="tab-content">


                            <div class="tab-pane" id="pengajaran">

                                <b> Pengajaran dari SISTER </b>

                                <p>
                                    <label>Semester</label>
                                    <select onchange="changeSelectPengajaran()" class="form-select form-select-md selectSemester" style="margin-left:20px;">
                                        <!--option value="0">-- Pilih Semester --</!--option-->
                                        @foreach (var item in Model.semesterSister)
                                        {
                                            <option value="@item.id">@item.nama</option>
                                        }
                                    </select>

                                    <label style="margin-left:20px;">Unit</label>
                                    <select onchange="changeSelectPengajaran()" class="form-select form-select-md selectUnitPengajaran" style="margin-left:20px;">
                                        <!--option value="0">-- Pilih Semester --</!--option-->
                                        @foreach (var item in Model.mstUnit)
                                        {
                                            <option value="@item.ID_UNIT">@item.NAMA_UNIT (@item.KODE_UNIT) </option>
                                        }
                                    </select>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="SinkronPengajaranPerulanganSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi </a>
                                </p>
                                <div style="overflow-x:auto;">
                                    <table id="tabelpengajaran" style="width:100%;" class="table table-sm table-striped table-bordered m-2">
                                        <thead>
                                            <tr>

                                                <th> No</th>
                                                <th> Nama mata Kuliah</th>
                                                <th>Nama jenis Evaluasi</th>
                                                <th> Nama kelas Kuliah</th>
                                                <th> NPP</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>


                                </div>
                            </div>


                            <!---  Penelitian-->


                            <div class="tab-pane" id="penelitian">
                                <b>Penelitian dari Sister</b>
                                @*<a class=" text-light btn btn-success" style="margin-bottom:10px"
            onclick="SinkronPenelitianSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi </a>*@
                                <label style="margin-left:20px;">Unit</label>
                                <select onchange="changeSelectPenelitian()" class="form-select form-select-md selectUnitPenelitian" style="margin-left:20px;">
                                    <!--option value="0">-- Pilih Semester --</!--option-->
                                    @foreach (var item in Model.mstUnit)
                                    {
                                        <option value="@item.ID_UNIT">@item.NAMA_UNIT (@item.KODE_UNIT) </option>
                                    }
                                </select>
                                <a class=" text-light btn btn-success" style="margin-bottom:10px"
                                   onclick="SinkronPenelitianPerulanganSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi </a>
                                <table id="penelitiansister" style="width:100%;" class="table table-md table-striped table-bordered m-2">
                                    <thead>
                                        <tr>
                                            <th> NO </th>
                                            <th> Judul Penelitian</th>
                                            <th> Durasi Kegiatan</th>
                                            <th> Skim Penelitan</th>
                                            <th> Tahun Ajaran</th>


                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>


                            <!--- / Penelitian-->
                            <!-- /.card-header -->
                            <!---  Publikasi-->
                            <div class="tab-pane" id="publikasi">
                                <b>Publikasi dari SISTER</b>
                                <label style="margin-left:20px;">Unit</label>
                                <select onchange="changeSelectPublikasi()" class="form-select form-select-md selectUnitPublikasi" style="margin-left:20px;">
                                    <!--option value="0">-- Pilih Semester --</!--option-->
                                    @foreach (var item in Model.mstUnit)
                                    {
                                        <option value="@item.ID_UNIT">@item.NAMA_UNIT (@item.KODE_UNIT) </option>
                                    }
                                </select>
                                <a class=" text-light btn btn-success" style="margin-bottom:10px"
                                   onclick="SinkronPublikasiPerulanganSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi </a>
                                <div style="overflow-x:auto;">
                                    <table id="tabelpublikasi" style="width:100%;" class="table table-sm table-striped table-bordered m-2">
                                        <thead>
                                            <tr>

                                                <th>NO</th>
                                                <th> Judul Penelitian</th>
                                                <th> Jenis Publikasi</th>
                                                <th> Tanggal Terbit</th>
                                                
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>

                                <!--- / Publikasi-->
                            </div>


                            <div class="tab-pane" id="pengabdian">
                                <b>Pengabdian dari Sister</b>

                                <label style="margin-left:20px;">Unit</label>
                                <select onchange="changeSelectPengabdian()" class="form-select form-select-md selectUnitPengabdian" style="margin-left:20px;">
                                    <!--option value="0">-- Pilih Semester --</!--option-->
                                    @foreach (var item in Model.mstUnit)
                                    {
                                        <option value="@item.ID_UNIT">@item.NAMA_UNIT (@item.KODE_UNIT) </option>
                                    }
                                </select>
                                <a class=" text-light btn btn-success" style="margin-bottom:10px"
                                   onclick="SinkronPengabdianPerulanganSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi </a>
                                <table id="tabelpengabdian" style="width:100%;" class="table table-sm table-striped table-bordered m-2">
                                    <thead>
                                        <tr>
                                            <th>NO</th>
                                            <th> Judul Penelitian</th>
                                            <th> Durasi</th>
                                            <th> SKIM</th>
                                            <th> Tahun Ajaran</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>

                            <div class="tab-pane" id="perbandinganpengajaran">

                                <b> Perbandingan Pengajaran </b>
                                <a class=" text-light btn btn-success" style="margin-bottom:10px"
                                   onclick="TesPerbandinganPengajaran_SPKP()"><i class="fa fa-refresh"></i> Sinkronisasi </a>
                                <div style="overflow-x:auto;">
                                    <table id="tabelperbandingan" style="width:100%;" class="table table-sm table-striped table-bordered m-2">
                                        <thead>
                                            <tr>

                                                <th> No</th>
                                                <th> Semester</th>
                                                <th> Mata kuliah SISTER</th>
                                                <th>Kelas</th>
                                                <th> SKS SISTER</th>
                                                <th> Mata kuliah SPKP</th>
                                                <th> SKS SPKP</th>
                                                <th> NPP</th>
                                                <th> Apakah SKS Sama?</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>


                                </div>
                            </div>

                            <div class="tab-pane" id="referensi">

                                <p>
                                    <b> Referensi Semester dari SISTER </b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="SinkronisasiRefSemesterSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi Semester </a>
                                </p>

                                <p>
                                    <b> Referensi Perguruan Tinggi dari SISTER </b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="SinkronisasiRefPerguruanTinggiSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi Perguruan Tinggi </a>
                                </p>

                                <p>
                                    <b> Referensi Kategori Capaian Luaran dari SISTER </b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="SinkronisasiRefKategoriCapaianLuaranSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi Kategori Capaian Luaran </a>
                                </p>

                                <p>
                                    <b> Referensi Jenis Publikasi dari SISTER </b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="SinkronisasiRefJenisPublikasiSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi Jenis Publikasi </a>
                                </p>

                                <p>
                                    <b> Referensi Kategori Kegiatan dari SISTER </b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="SinkronisasiRefKategoriKegiatanSISTER()"><i class="fa fa-refresh"></i> Sinkronisasi Kategori Kegiatan </a>
                                </p>




                            </div>
                            <div class="tab-pane" id="enkripsiPassword">
                                <p>
                                    <b> Enkripsi Password Semua </b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="EnkripsiPasswordSemua()"><i class="fa fa-refresh"></i> Enkripsi Password Semua </a>
                                </p>
                            </div>

                            <div class="tab-pane" id="testEmail">
                                <p>
                                    <b> Test Email</b>

                                    <a class=" text-light btn btn-success" style="margin-left:20px"
                                       onclick="TestingSendEmail()"><i class="fa fa-refresh"></i> Testing Send Email </a>
                                </p>
                            </div>








                        </div>

                        </div>
            </div>
            <!-- /.tab-content -->




        
             </div>
        </section>
    </div>
</body>



@section Scripts{


    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.0.2/js/dataTables.responsive.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

    </script>
    <script>

        var dataTablePublikasiSISTER, dataTablePenelitianSISTER, dataTablePengabdianSISTER, dataTablePengajaranSISTER, dataTablePerbandinganSISTER;
        var sweet_loader = '<div class="sweet_loader"><svg viewBox="0 0 140 140" width="140" height="140"><g class="outline"><path d="m 70 28 a 1 1 0 0 0 0 84 a 1 1 0 0 0 0 -84" stroke="rgba(0,0,0,0.1)" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round"></path></g><g class="circle"><path d="m 70 28 a 1 1 0 0 0 0 84 a 1 1 0 0 0 0 -84" stroke="#71BBFF" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-dashoffset="200" stroke-dasharray="300"></path></g></svg></div>';
        var semester, id_unitPengajaran;
        var id_unitPenelitian;
        var id_unitPengabdian;
        var id_unitPublikasi;
        var dataTableRefSemesterSISTER;
        $(document).ready(function () {
            semester = $(".selectSemester").val("20201");
            semester = "20201";

            id_unitPenelitian = $(".selectUnitPenelitian").val(54);
            id_unitPenelitian = 54;

            id_unitPengabdian = $(".selectUnitPengabdian").val(54);
            id_unitPengabdian = 54;

            id_unitPublikasi = $(".selectUnitPublikasi").val(54);
            id_unitPublikasi = 54;
            

            dataTablePengajaranSISTER = $("#tabelpengajaran").DataTable({
                "paging": false,
                "ordering": false,
                "paging": true,
                "processing": true, // for show progress bar
 // for show progress bar

                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SimkaDosen/LoadDataPengajaranAsyncProdi",
                    "type": "POST",
                    "data": function (d) {
                        d.id_semester = semester
                        d.id_unit = id_unitPengajaran
                    },
                    "datatype": "json"
                },
                "language": {
                    "emptyTable": "Tidak Ada Data Pada Sister"
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": true
                    }],


                "columns": [
                    {
                        "data": null, "sortable": false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "mata_kuliah", "name": "nama_mata_kuliah", "autoWidth": true },
                    { "data": "semester", "name": "nama_jenis_evaluasi", "autoWidth": true },
                    { "data": "kelas", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "npp", "name": "nama_kelas_kuliah", "autoWidth": true },


                    //
                ]

            });

            dataTablePublikasiSISTER = $("#tabelpublikasi").DataTable({
                "paging": false,
                "ordering": false,
                "paging": true,
                "processing": true, // for show progress bar

                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SimkaDosen/LoadDataPublikasiProdi",
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {
                        d.id_unit = id_unitPublikasi

                    },
                },
                "language": {
                    "emptyTable": "Tidak Ada Data Pada Sister"
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": true
                    }],


                "columns": [
                    {
                        "data": null, "sortable": false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "judul", "name": "nama_mata_kuliah", "autoWidth": true },
                    { "data": "jenis_publikasi", "name": "nama_jenis_evaluasi", "autoWidth": true },
                    { "data": "tanggal", "name": "nama_kelas_kuliah", "autoWidth": true },
                    


                    //
                ]

            });

            dataTablePengabdianSISTER = $("#tabelpengabdian").DataTable({
                "paging": false,
                "ordering": false,
                "paging": true,
                "processing": true, // for show progress bar
 // for show progress bar

                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SimkaDosen/LoadDataPengabdianProdi",
                    "type": "POST",
                    "data": function (d) {
                        d.id_unit = id_unitPengabdian

                    },
                    "datatype": "json"
                },
                "language": {
                    "emptyTable": "Tidak Ada Data Pada Sister"
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": true,
                        "width": "80%"
                    }],


                "columns": [
                    {
                        "data": null, "sortable": false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "judul_penelitian_pengabdian", "name": "nama_mata_kuliah", "autoWidth": true },

                    { "data": "durasi_kegiatan", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "jenis_skim", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "tahun_pelaksanaan", "name": "nama_kelas_kuliah", "autoWidth": true },

                ]

            });

            dataTablePenelitianSISTER = $("#penelitiansister").DataTable({
                "paging": false,
                "ordering": false,
                "paging": true,
                "processing": true, // for show progress bar

                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SimkaDosen/LoadDataPenelitianProdi",
                    "type": "POST",
                    "data": function (d) {
                        d.id_unit = id_unitPenelitian
                       
                    },
                    "datatype": "json"
                },
                "language": {
                    "emptyTable": "Tidak Ada Data Pada Sister"
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": true
                    }],


                "columns": [
                    {
                        "data": null, "sortable": false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "judul_penelitian_pengabdian", "name": "nama_mata_kuliah", "autoWidth": true },

                    { "data": "durasi_kegiatan", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "jenis_skim", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "tahun_pelaksanaan", "name": "nama_kelas_kuliah", "autoWidth": true },

                ]

            });

            dataTablePerbandinganSISTER = $("#tabelperbandingan").DataTable({
                "paging": false,
                "ordering": false,
                "paging": true,
                "processing": true, // for show progress bar
                // for show progress bar

                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SimkaDosen/PerbandinganPengajaran_SPKP",
                    "type": "POST",
                    "data": { "id_semester": semester },
                    "datatype": "json"
                },
                "language": {
                    "emptyTable": "Tidak Ada Data Pada Sister"
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": true
                    }],


                "columns": [
                    {
                        "data": null, "sortable": false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    //{ "data": "mata_kuliah", "name": "nama_mata_kuliah", "autoWidth": true },
                    //{ "data": "semester", "name": "nama_jenis_evaluasi", "autoWidth": true },
                    //{ "data": "kelas", "name": "nama_kelas_kuliah", "autoWidth": true },
                    //{ "data": "SKS_SPKP", "name": "nama_kelas_kuliah", "autoWidth": true },
                    //{ "data": "NPP", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "semester", "name": "nama_jenis_evaluasi", "autoWidth": true },
                    { "data": "mata_kuliah", "name": "nama_mata_kuliah", "autoWidth": true },
                    
                    { "data": "kelas", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "sks", "name": "nama_kelas_kuliah", "autoWidth": true },
                   
                    { "data": "NAMA_MK_SPKP", "name": "nama_mata_kuliah", "autoWidth": true },
                    { "data": "SKS_SPKP", "name": "nama_mata_kuliah", "autoWidth": true },
                    { "data": "NPP", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "apakah_SKS_sama", "name": "nama_kelas_kuliah", "autoWidth": true },

                    //
                ]

            });

            dataTableRefSemesterSISTER = $("#tabelRefSemester").DataTable({
                "paging": false,
                "ordering": false,
                "paging": true,
                "processing": true, // for show progress bar
                // for show progress bar

                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SimkaDosen/PerbandinganPengajaran_SPKP",
                    "type": "POST",
                    "data": { "id_semester": semester },
                    "datatype": "json"
                },
                "language": {
                    "emptyTable": "Tidak Ada Data Pada Sister"
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": true
                    }],


                "columns": [
                    {
                        "data": null, "sortable": false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    //{ "data": "mata_kuliah", "name": "nama_mata_kuliah", "autoWidth": true },
                    //{ "data": "semester", "name": "nama_jenis_evaluasi", "autoWidth": true },
                    //{ "data": "kelas", "name": "nama_kelas_kuliah", "autoWidth": true },
                    //{ "data": "SKS_SPKP", "name": "nama_kelas_kuliah", "autoWidth": true },
                    //{ "data": "NPP", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "semester", "name": "nama_jenis_evaluasi", "autoWidth": true },
                    { "data": "mata_kuliah", "name": "nama_mata_kuliah", "autoWidth": true },

                    { "data": "kelas", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "sks", "name": "nama_kelas_kuliah", "autoWidth": true },

                    { "data": "NAMA_MK_SPKP", "name": "nama_mata_kuliah", "autoWidth": true },
                    { "data": "SKS_SPKP", "name": "nama_mata_kuliah", "autoWidth": true },
                    { "data": "NPP", "name": "nama_kelas_kuliah", "autoWidth": true },
                    { "data": "apakah_SKS_sama", "name": "nama_kelas_kuliah", "autoWidth": true },

                    //
                ]

            });

            



        });

        function changeSelectPengajaran() {
            semester = $(".selectSemester").val();
            id_unitPengajaran = $(".selectUnitPengajaran").val();

            console.log("ini changeSelect")
            console.log(id_unitPengajaran)

            dataTablePengajaranSISTER.ajax.reload();
        }

        function changeSelectPenelitian() {
            
            id_unitPenelitian = $(".selectUnitPenelitian").val();

            console.log("ini changeSelectPenelitian")
            console.log(id_unitPenelitian)

            dataTablePenelitianSISTER.ajax.reload();
        }

        function changeSelectPengabdian() {

            id_unitPengabdian = $(".selectUnitPengabdian").val();

            console.log("ini changeSelectPengabdian")
            console.log(id_unitPengabdian)

            dataTablePengabdianSISTER.ajax.reload();
        }

        function changeSelectPublikasi() {

            id_unitPublikasi = $(".selectUnitPublikasi").val();

            console.log("ini changeSelectPublikasi")
            console.log(id_unitPublikasi)

            dataTablePublikasiSISTER.ajax.reload();
        }


        

        function SinkronPengabdianSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn Pengabdian sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataPengabdianProdiSISTER',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Pengabdian Berhasil");
                        dataTablePengabdianSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Pengabdian Gagal");
                    
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });

            
        }

        function SinkronPenelitianSISTER() {

            
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn penelitian prodi sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataPenelitianProdiSISTER',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Penelitian Berhasil");
                        dataTablePenelitianSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi Penelitian Gagal</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Penelitian Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });

            //swal.close();
            //setTimeout(function () {
            //    swal.close();
            //}, 3000);
        }

        function SinkronPengajaranSISTER() {
            var nama_semester = semester.substring(0, 4);
            if (semester.substring(4, 5) == "1")
                nama_semester += " Ganjil"
            else if (semester.substring(4, 5) == "2")
                nama_semester += " Genap"
            else if (semester.substring(4, 5) == "3")
                nama_semester += " Pendek"

            swal.fire({
                icon: 'info',
                title: "Loading...",
                text: "Sedang Sinkronisasi Pengajaran Semester " + nama_semester,
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn Pengajaran sister clicked")
            $.ajax({
                type: 'POST',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataPengajaranProdiSISTER',
                data: {
                    "id_semester" : semester
                },

                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Pengajaran Berhasil");
                        dataTablePengajaranSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi gagal</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Pengajaran Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });

            //swal.close();
            //setTimeout(function () {
            //    swal.close();
            //}, 3000);
        }

        function SinkronPublikasiSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn Publikasi sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataPublikasiProdiSISTER',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Publikasi Berhasil");
                        dataTablePublikasiSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi gagal</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Publikasi Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });

            //swal.close();
            //setTimeout(function () {
            //    swal.close();
            //}, 3000);

            
        }

        function SinkronPenelitianPerulanganSISTER() {

            var namaProdi, listNpp;
            console.log(id_unitPenelitian)
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });

            
            $.ajax({
                type: 'get',
                
                url: '/SimkaDosen/getListNppByProdi',
                data: {
                    "id_unit": id_unitPenelitian
                },

                datatype: 'json',
                success: function (data) {
                    if (data.success) {

                        var promises = [];
                        listNpp = data.data;
                        console.log(listNpp);
                        $(listNpp).each(function (index, value) {
                            var request =
                                setTimeout(function () {
                                    $.ajax({
                                        type: 'get',
                                        url: "/SimkaDosen/SinkronDataPenelitianSISTERbyNPP",
                                        data: {
                                            "npp": value.npp
                                        },

                                        datatype: 'json',
                                        success: function (data) {
                                            if (data.success) {
                                                console.log(data.nama + " berhasil")

                                            } else if (data.error) {

                                                console.log(data.nama + " " + data.npp + " gagal \n Error :" + data.message)


                                            } else {
                                                console.log(data.nama + " gagal \n Error :" + data.message)
                                            }
                                        },
                                        error: function (data) {

                                            return (data.nama + " error")

                                        }
                                    });
                                }, index * 2000);
                                    

                            
                            var tes = console.log(index);

                            promises.push(request);
                        });
                        promises.push(dataTablePenelitianSISTER.ajax.reload());

                        Promise.all(promises)
                            .then(value => {
                                console.log("Sinkronisasi by NPP Selesai")
                                swal.fire({
                                    icon: 'success',
                                    html: '<h5>Sinkronisasi Berhasil</h5>'
                                });
                                dataTablePenelitianSISTER.ajax.reload();
                            })
                        
                    } else {
                        console.log(data.success)
                        swal.fire({
                            icon: 'error',
                            html: '<h5>Nama Prodi tidak ditemukan</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Mengambil data NPP berdasarkan Prodi gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Mengambil data NPP berdasarkan Prodi gagal</h5>'
                    });
                },
                
            });

            //console.log("ini setelah ajax get npp");
            //if (listNpp != null) {
            //    console.log("ini didalam if listNPP");
                

            //} else {
            //    console.log("ini didalam else listNPP!= null")

            //}
            
        }

        function SinkronPengabdianPerulanganSISTER() {

            var namaProdi, listNpp;
            console.log(id_unitPengabdian)
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });


            $.ajax({
                type: 'get',

                url: '/SimkaDosen/getListNppByProdi',
                data: {
                    "id_unit": id_unitPengabdian
                },

                datatype: 'json',
                success: function (data) {
                    if (data.success) {

                        var promises = [];
                        listNpp = data.data;
                        console.log(listNpp);
                        $(listNpp).each(function (index, value) {
                            var request =
                                setTimeout(function () {
                                    $.ajax({
                                    type: 'get',
                                    url: "/SimkaDosen/SinkronDataPengabdianProdiSISTERbyNPP",
                                    data: {
                                        "npp": value.npp
                                    },

                                    datatype: 'json',
                                        success: function (data) {
                                            if (data.success) {
                                                console.log(data.nama + " berhasil")

                                            } else if (data.error) {

                                                console.log(data.nama + " " + data.npp + " gagal \n Error :" + data.message)


                                            } else {
                                                console.log(data.nama + " gagal \n Error :" + data.message)
                                            }
                                        },
                                    error: function (data) {

                                        return (data.nama + " error")

                                    }
                                    });
                                }, index * 2000);

                            var tes = console.log(index);

                            promises.push(request);
                        });
                       
                        promises.push(dataTablePengabdianSISTER.ajax.reload());
                        Promise.all(promises)
                            .then(value => {
                                console.log("Sinkronisasi by NPP Selesai")
                                swal.fire({
                                    icon: 'success',
                                    html: '<h5>Sinkronisasi Berhasil</h5>'
                                });
                                dataTablePengabdianSISTER.ajax.reload();
                            })

                    } else {
                        console.log(data.success)
                        swal.fire({
                            icon: 'error',
                            html: '<h5>Nama Prodi tidak ditemukan</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Mengambil data NPP berdasarkan Prodi gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Mengambil data NPP berdasarkan Prodi gagal</h5>'
                    });
                },

            });

            //console.log("ini setelah ajax get npp");
            //if (listNpp != null) {
            //    console.log("ini didalam if listNPP");


            //} else {
            //    console.log("ini didalam else listNPP!= null")

            //}

        }

        function SinkronPublikasiPerulanganSISTER() {

            var namaProdi, listNpp;
            console.log(id_unitPublikasi)
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });


            $.ajax({
                type: 'get',

                url: '/SimkaDosen/getListNppByProdi',
                data: {
                    "id_unit": id_unitPublikasi
                },

                datatype: 'json',
                success: function (data) {
                    if (data.success) {

                        var promises = [];
                        listNpp = data.data;
                        console.log(listNpp);
                        $(listNpp).each(function (index, value) {
                            var request =
                                setTimeout(function () {
                                   $.ajax({
                                        type: 'get',
                                        url: "/SimkaDosen/SinkronDataPublikasiProdiSISTERbyNPP",
                                        data: {
                                            "npp": value.npp
                                        },

                                        datatype: 'json',
                                       success: function (data) {
                                           if (data.success) {
                                               console.log(data.nama + " berhasil")

                                           } else if (data.error) {

                                               console.log(data.nama + " " + data.npp + " gagal \n Error :" + data.message)


                                           } else {
                                               console.log(data.nama + " gagal \n Error :" + data.message)
                                           }
                                       },
                                        error: function (data) {

                                            return (data.nama + " error")

                                        }
                                    });
                                }, index * 2000);

                            var tes = console.log(index);

                            promises.push(request);
                        });
                        promises.push(dataTablePenelitianSISTER.ajax.reload());

                        Promise.all(promises)
                            .then(value => {
                                console.log("Sinkronisasi by NPP Selesai")
                                swal.fire({
                                    icon: 'success',
                                    html: '<h5>Sinkronisasi Berhasil</h5>'
                                });
                                dataTablePublikasiSISTER.ajax.reload();
                            })

                    } else {
                        console.log(data.success)
                        swal.fire({
                            icon: 'error',
                            html: '<h5>Nama Prodi tidak ditemukan</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Mengambil data NPP berdasarkan Prodi gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Mengambil data NPP berdasarkan Prodi gagal</h5>'
                    });
                },

            });

            //console.log("ini setelah ajax get npp");
            //if (listNpp != null) {
            //    console.log("ini didalam if listNPP");


            //} else {
            //    console.log("ini didalam else listNPP!= null")

            //}

        }

         function SinkronPengajaranPerulanganSISTER() {

            var namaProdi, listNpp;
            console.log(id_unitPengajaran)
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });


            $.ajax({
                type: 'get',

                url: '/SimkaDosen/getListNppByProdi',
                data: {
                    "id_unit": id_unitPengajaran
                },

                datatype: 'json',
                success:  function (data) {
                    if (data.success) {

                        var promises = [];
                        listNpp = data.data;
                        console.log(listNpp);
                         $(listNpp).each(   function (index, value) {
                            var request =
                                 setTimeout(function () {
                                    $.ajax({
                                        type: 'get',
                                        url: "/SimkaDosen/SinkronDataPengajaranProdiSISTERbyNPP",
                                        data: {
                                            "id_semester": semester,
                                            "npp": value.npp
                                        },

                                        datatype: 'json',
                                        success: function (data) {
                                            if (data.success) {
                                                console.log(data.nama + " berhasil")

                                            } else if(data.error){

                                                console.log(data.nama + " "+data.npp+" gagal \n Error :" + data.message)


                                            } else {
                                                console.log(data.nama + " gagal \n Error :" + data.message)
                                            }
                                        },
                                        error: function (data) {

                                            return (data.nama + " error")

                                        }
                                    });
                                }, index * 2000);

                                

                            var tes = console.log(index);

                           promises.push(request);
                        });
                        promises.push(dataTablePengajaranSISTER.ajax.reload());                        

                        Promise.all(promises)
                            .then(value => {
                                console.log("Sinkronisasi by NPP Selesai")
                                swal.fire({
                                    icon: 'success',
                                    html: '<h5>Sinkronisasi Berhasil</h5>'
                                });
                                dataTablePengajaranSISTER.ajax.reload();
                            })

                    } else {
                        console.log(data.success)
                        swal.fire({
                            icon: 'error',
                            html: '<h5>Nama Prodi tidak ditemukan</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Mengambil data NPP berdasarkan Prodi gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Mengambil data NPP berdasarkan Prodi gagal</h5>'
                    });
                },

            });

            //console.log("ini setelah ajax get npp");
            //if (listNpp != null) {
            //    console.log("ini didalam if listNPP");


            //} else {
            //    console.log("ini didalam else listNPP!= null")

            //}

        }

        


        async function SinkronPenelitianSisterbyNPP(npp) {
            $.ajax({
                type: 'get',
                url: "/SimkaDosen/SinkronDataPenelitianSISTERbyNPP",
                data: {
                    npp: npp
                },

                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        return (data.nama + " berhasil")

                    } else {
                        return(data.nama + " gagal")

                    }
                },
                error: function (data) {

                    return ("ini error")

                }
            });
        }

        function TesPerbandinganPengajaran_SPKP() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn perbandingan sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/PerbandinganPengajaran_SPKP',


                datatype: 'json',
                success: function (data) {
                    if (data.data != null) {
                        console.log(data.message)
                        toastr.success(data.message);
                        dataTablePerbandinganSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error(" Perbandingan Gagal");

                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });


        }

        function SinkronPublikasiSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn Publikasi sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataPublikasiProdiSISTER',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Publikasi Berhasil");
                        dataTablePublikasiSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi gagal</h5>'
                        });
                    }
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Publikasi Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });

            //swal.close();
            //setTimeout(function () {
            //    swal.close();
            //}, 3000);

            
        }
        
        function SinkronisasiRefSemesterSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn sinkron ref semester sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataReferensiSister',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Ref Semester Berhasil");
                       
                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi Ref Semester Gagal</h5>'
                        });
                    }
                    console.log(data)
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Semester Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });


        }


        function SinkronisasiRefPerguruanTinggiSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn sinkron ref peguruan tinggi sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataPerguruanTinggiSister',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Ref Perguruan Tinggi Berhasil");

                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi Ref Perguruan Tinggi Gagal</h5>'
                        });
                    }
                    console.log(data)
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Perguruan Tinggi Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });


        }

        function SinkronisasiRefKategoriCapaianLuaranSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn sinkron ref kategori capaian luaran sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataKategoriCapaianLuaranSister',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Ref Kategori Capaian Luaran Berhasil");

                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi Ref Kategori Capaian Luaran Gagal</h5>'
                        });
                    }
                    console.log(data)
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("SinkronisasiKategori Capaian LuaranGagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });


        }

        function SinkronisasiRefJenisPublikasiSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn sinkron ref jenis publikasi sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataJenisPublikasiSister',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Ref Jenis Publikasi Berhasil");

                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            html: '<h5>Sinkronisasi Ref Jenis Publikasi Gagal</h5>'
                        });
                    }
                    console.log(data)
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Jenis Publikasi Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });


        }

        function SinkronisasiRefKategoriKegiatanSISTER() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn sinkron ref kategori kegiatan sister clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/SinkronDataReferensiKategoriKegiatanSister',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Sinkronisasi Ref Kategori Kegiatan Berhasil");

                        swal.fire({
                            icon: 'success',
                            html: '<h5>Sinkronisasi Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            title: 'Sinkronisasi Ref Kategori Kegiatan Gagal'
                            
                        });
                    }
                    console.log(data)
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Sinkronisasi Kategori Kegiatan Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Sinkronisasi Gagal</h5>'
                    });
                }
            });


        }

        function EnkripsiPasswordSemua() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn enkripsi password all clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/SimkaDosen/EnkripsiPasswordAll',


                datatype: 'json',
                success: function (data) {
                    if (data.success) {
                        console.log(data.message)
                        toastr.success("Enkripsi Password Berhasil");

                        swal.fire({
                            icon: 'success',
                            html: '<h5>Enkripsi Password Berhasil</h5>'
                        });
                    } else {
                        toastr.error(data.message);
                        swal.fire({
                            icon: 'warning',
                            title: 'Enkripsi Password Kegiatan Gagal'

                        });
                    }
                    console.log(data)
                },
                error: function (data) {

                    console.log("ini gagal")
                    toastr.error("Enkripsi Password Gagal");
                    swal.fire({
                        icon: 'warning',
                        html: '<h5>Enkripsi Password Gagal</h5>'
                    });
                }
            });


        }

        function TestingSendEmail() {
            swal.fire({
                icon: 'info',
                html: '<h5>Loading...</h5>',
                showCancelButton: false,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            console.log("btn test email clicked")
            $.ajax({
                type: 'get',
                // url: 'https://jsonplaceholder.typicode.com/todos/1',
                url: '/Home/SendEmail',
                data: function (d) {
                    d.Nama = "dimas",
                        d.Emails = "dimasprayoga2@gmail.com",
                        d.Message = "  <br><br><br> TESTING SIMKA 2 DEV <br> Berikut informasi login Bapak Ibu <br><br>" +
                        "Waktu Dan Tanggal:  " + DateTime.Now + "<br> IP Adress: "
                        + HttpContext.Connection.RemoteIpAddress.MapToIPv4().ToString() + "<br>" +
                        "Apabila Bapak/ Ibu tidak mengenali aktivitas ini agar segera menghubungi KSI melalui " +
                        "<a href='http://ksi.uajy.ac.id/helpdesk/open.php' target='_blank'> http://ksi.uajy.ac.id/helpdesk</a>" +
                        "<br>Terimakasih "
                },


                datatype: 'json',
                success: function (data) {
                   
                        console.log(data)
                        toastr.success("test email Berhasil");
                        dataTablePengabdianSISTER.ajax.reload();
                        swal.fire({
                            icon: 'success',
                            html: '<h5>test email Berhasil</h5>'
                        });
                    
                },
                error: function (data) {

                    console.log("test email gagal")
                    toastr.error("test email Gagal");

                    swal.fire({
                        icon: 'warning',
                        html: '<h5>test email Gagal</h5>'
                    });
                }
            });


        }
    </script>
    }