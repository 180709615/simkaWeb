@model APIConsume.Models.ResetPasswordForm

@{
    ViewData["Title"] = "ResetPasswordForm";
}
@{
    //ViewData["Title"] = "LupaPassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<body class="hold-transition login-page">
    <!-- Content Wrapper. Contains page content -->
    @if (TempData["isLinkValid"] as bool? == true)
    {
        <div class="login-box">


            <div class="login-logo">
                <b>SIMKA</b><br>
                <i>Sistem Informasi Manajemen Kepegawaian </i>

            </div>

            <div class="login-box-body">

                <h2 style="text-align:center; margin-bottom:30px; margin-top:-10px;"><b>Reset Password</b></h2>
                <form asp-action="ResetPasswordForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="passwordBaru" class="control-label"></label>
                        <input asp-for="passwordBaru" class="form-control" />
                        <span asp-validation-for="passwordBaru" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="passwordBaruConfirm" class="control-label"></label>
                        <input asp-for="passwordBaruConfirm" class="form-control" />
                        <span asp-validation-for="passwordBaruConfirm" class="text-danger"></span>
                    </div>
                    <div class="form-group text-center">
                        <button type="submit" value="Submit" class="btn btn-primary">Submit</button>
                    </div>

                    <h4 class="text-success text-center">@TempData["SuccessMessage"]</h4>

                </form>

            </div>

        </div>
    }
    
    
        @Html.Raw(TempData["alert"])
    

</body>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
